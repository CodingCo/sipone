/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package facades;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import model.ElectiveCourse;
import org.junit.After;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Before;
import webInterface.SubjectFacadeIF;

/**
 *
 * @author christophermortensen
 */
public class SubjectFacadeTest {
    
    SubjectFacadeIF instance;
    GsonBuilder gsonBuilder;
    Gson gson;
    boolean isMock = true;

    @Before 
    public void setUp(){
        gsonBuilder = new GsonBuilder();
        gson = gsonBuilder.excludeFieldsWithoutExposeAnnotation().create();
        
        if(isMock){
            instance = new SubjectFacadeMock();
        } else{
            instance = new SubjectFacade(gson);
        }
        addDummyData();
    }
    
    @After
    public void tearDown(){
        emptyTable();
    }
    
    // ID - Autogenerated - Starts on 100000 (inclusive)
    public void addDummyData(){
        // adds to pool 1 when i is <= 10 else 2
        for(int i = 0; i < 20; i++){
            ElectiveCourse electiveCourse = new ElectiveCourse("Elective Course " + i, "TestDescription nr. " + i, i <= 10 ? "1" : "2", 1);
            instance.submitElectiveSubject(gson.toJson(electiveCourse));
        }
    }
    
    public void emptyTable(){
        instance.emptyTable();
    }
    
    /**
     * Test of getFirstElectiveSubjects method, of class SubjectFacade.
     */
    @Test
    public void testGetFirstElectiveSubjects() {
        System.out.println("getFirstElectiveSubjects");
        int expResult = 10;
        int result = instance.getFirstElectiveSubjects().split("electiveCourseName").length;
        assertEquals(expResult, result);
    }

    /**
     * Test of submittedFirstElectiveSubjects method, of class SubjectFacade.
     */
    @Test
    public void testSubmitElectiveSubject() {
        System.out.println("submittedFirstElectiveSubjects");
        ElectiveCourse electiveCourse = new ElectiveCourse("Elective Course " + 20, "TestDescription nr. " + 20, "1", 1);
        String subjectAsJson = gson.toJson(electiveCourse);
        String expResult = "{\"id\": \"" + electiveCourse.getId() + "\", \"electiveCourseName\": \"" + electiveCourse.getElectiveCourseName() + "\", \"creationDate\": \"" + electiveCourse.getCreationDate() + "\", \"noOfVotes\": \"" + electiveCourse.getNoOfVotes() + "\", \"description\": \"" + electiveCourse.getDescription() + "\", \"pool\": \"" + electiveCourse.getPool() + "\", \"round\": \"" + electiveCourse.getRound() + "\"}";
        String result = instance.submitElectiveSubject(subjectAsJson);
        assertEquals(expResult, result);
    }

    /**
     * Test of getSecondElectiveSubjects method, of class SubjectFacade.
     */
    @Test
    public void testGetSecondElectiveSubjects() {
        System.out.println("getSecondElectiveSubjects");
        String expResult = "";
        String result = instance.getSecondElectiveSubjects();
        assertEquals(expResult, result);
        fail("The test case is a prototype.");
    }

    /**
     * Test of deleteElectiveSubject method, of class SubjectFacade.
     */
    @Test
    public void testDeleteElectiveSubject() {
        System.out.println("deleteElectiveSubject");
        long id = 0L;
        String expResult = "";
        String result = instance.deleteElectiveSubject(id);
        assertEquals(expResult, result);
        fail("The test case is a prototype.");
    }
    
    @Test 
    public void testEmptyTable(){
        System.out.println("emptyTable");
        String expResult = "";
        String result = instance.emptyTable();
        assertEquals(expResult, result);
        fail("The test case is a prototype");
    }
    
}
